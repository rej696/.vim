set nocompatible
set autoindent
set nu
set smartindent
set showmatch
set textwidth=80
set title
set backspace=indent,eol,start
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set t_Co=16
syntax on
set sc
set modeline
set wildmenu
set splitright
set splitbelow
set mouse=a
set scrolloff=5

" run ruby code, e.g. :Ruby "puts \"Hello World\""
" make sure to wrap code in double quotes, and escape double quotes in the code
command! Ruby echo system("ruby -e" . <q-args>)

" run ruby script for generating hex from packet descriptions and save in paste
" register
" function! GenerateHex(line1, line2)
"   let save_reg = getreg('"')
"   let save_type = getregtype('"')
"   silent execute a:line1 ',' a:line2 'y'
"   let result =  system('~/stmHexGenerator.rb "' . @" .'"')
"   echo result
"   call setreg('"', result, save_type)
"   "call setreg('"', save_reg, save_type)
" endfunction

" command! -range -bar GenerateHex call GenerateHex(<line1>, <line2>)

" netrw directory browser settings
let g:netrw_liststyle=3 "tree view
let g:netrw_browse_split=4 "open new file in previous window
let g:netrw_winsize=15 "set default width to 25%
let g:netrw_keepdir=0 "sync current dir with browsing dir
let g:netrw_banner=0 "hide banner
let g:netrw_list_hide = '\(^\|\s\s\)\zs\.\S\+'
command! Dir Vexplore

" Set statusline
let g:currentmode={
      \ 'n'  : 'n',
      \ 'v'  : 'v',
      \ 'V'  : 'vl',
      \ '^V' : 'vb', " need to fix this by typing <C-V><C-V> in vim to replace ^V
      \ 'i'  : 'i',
      \ 'R'  : 'r',
      \ 'r'  : 'r',
      \ 'Rv' : 'rv',
      \ 'c'  : 'c',
      \ 't'  : 'f',
      \}

hi NormalColor ctermbg=5 ctermfg=0
hi InsertColor ctermbg=2 ctermfg=0
hi ReplaceColor ctermbg=1 ctermfg=0
hi VisualColor  ctermbg=4 ctermfg=0
hi FileColor ctermbg=0 ctermfg=9 cterm=bold
hi ModColor ctermbg=8 ctermfg=4
hi FileTypeColor ctermbg=8 ctermfg=15
hi LineNumberColor ctermbg=8 ctermfg=2
hi ColNumberColor ctermbg=8 ctermfg=5*
hi BufferNumberColor ctermbg=8 ctermfg=11

set laststatus=2
set statusline=
set statusline+=%#NormalColor#%{(g:currentmode[mode()]==#'n')?'\ \ NORMAL\ ':''}
set statusline+=%#InsertColor#%{(g:currentmode[mode()]==#'i')?'\ \ INSERT\ ':''}
set statusline+=%#ReplaceColor#%{(g:currentmode[mode()]==#'r')?'\ \ REPLACE\ ':''}
set statusline+=%#ReplaceColor#%{(g:currentmode[mode()]==#'rv')?'\ \ V-REPLACE\ ':''}
set statusline+=%#VisualColor#%{(g:currentmode[mode()]==#'v')?'\ \ VISUAL\ ':''}
set statusline+=%#VisualColor#%{(g:currentmode[mode()]==#'vl')?'\ \ V-LINE\ ':''}
set statusline+=%#VisualColor#%{(g:currentmode[mode()]==#'vb')?'\ \ V-BLOCK\ ':''}
set statusline+=%#NormalColor#%{(g:currentmode[mode()]==#'c')?'\ \ COMMAND\ ':''}
set statusline+=%#NormalColor#%{(g:currentmode[mode()]==#'f')?'\ \ FINDER\ ':''}
set statusline+=%#FileColor#\ %t
set statusline+=\ %#ModColor#%m
set statusline+=%=
set statusline+=%#FileTypeColor#%y
set statusline+=%#ModColor#\ <<
set statusline+=%#LineNumberColor#\ %l\ %#ModColor#/%#LineNumberColor#\ %L
set statusline+=%#ModColor#\ ::
set statusline+=%#ColNumberColor#\ %c
set statusline+=%#ModColor#\ ::
set statusline+=%#BufferNumberColor#\ %n
set statusline+=%#ModColor#\ >>\ %*
set noshowmode

" Remap Splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
if has("gui_running")
    "set guifont=Monospace:h11
else
    noremap! <C-?> <C-h>
endif
